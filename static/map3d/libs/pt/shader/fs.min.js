module.exports="#if defined paraboloid_point_shape\n#extension GL_EXT_frag_depth : enable\n#endif\nprecision highp float;precision highp int;uniform mat4 viewMatrix;uniform mat4 uViewInv;uniform mat4 uProjInv;uniform vec3 cameraPosition;uniform mat4 projectionMatrix;uniform float uOpacity;uniform float blendHardness;uniform float blendDepthSupplement;uniform float fov;uniform float uSpacing;uniform float near;uniform float far;uniform float uPCIndex;uniform float uScreenWidth;uniform float uScreenHeight;varying vec4 vColor;varying float vLogDepth;varying vec3 vViewPosition;varying float vRadius;varying float vPointSize;varying vec3 vPosition;\n#if defined(num_snapshots) && num_snapshots > 0\nuniform sampler2D uSnapshot[num_snapshots];uniform sampler2D uSnapshotDepth[num_snapshots];uniform mat4 uSnapView[num_snapshots];uniform mat4 uSnapProj[num_snapshots];uniform mat4 uSnapProjInv[num_snapshots];uniform mat4 uSnapViewInv[num_snapshots];varying float vSnapTextureID;\n#endif\nfloat specularStrength=1.0;void main(){vec4 color=vColor;float depth=gl_FragCoord.z;\n#if defined(circle_point_shape) || defined(paraboloid_point_shape) \nfloat u=(2.0*gl_PointCoord.x)-1.0;float v=(2.0*gl_PointCoord.y)-1.0;\n#endif\n#if defined(circle_point_shape) \nfloat cc=(u*u)+(v*v);if(cc>1.0){discard;}\n#endif\n#if defined color_type_point_index\ngl_FragColor=vec4(color.rgb,uPCIndex/255.0);\n#elif defined color_type_composite\ngl_FragColor=color;\n#else\ngl_FragColor=vec4(color.rgb,uOpacity);\n#endif\n#if defined paraboloid_point_shape\nfloat wi=0.0-((u*u)+(v*v));vec4 pos=vec4(vViewPosition,1.0);pos.z+=(wi*vRadius);float linearDepth=-pos.z;pos=projectionMatrix*pos;pos=pos/pos.w;float expDepth=pos.z;depth=(pos.z+1.0)/2.0;gl_FragDepthEXT=depth;\n#if defined(color_type_depth)\ncolor.r=linearDepth;color.g=expDepth;\n#endif\n#if defined(use_edl)\ngl_FragColor.a=log2(linearDepth);\n#endif\n#else\n#if defined(use_edl)\ngl_FragColor.a=vLogDepth;\n#endif\n#endif\n#if defined(weighted_splats)\nfloat distance=2.0*length(gl_PointCoord.xy-0.5);float weight=max(0.0,1.0-distance);weight=pow(weight,1.5);gl_FragColor.a=weight;gl_FragColor.xyz=gl_FragColor.xyz*weight;\n#endif\n}";